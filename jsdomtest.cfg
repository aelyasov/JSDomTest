iterate {
  total = 1
}

coverage {
  branches = 0
}

breakpoint {
  enabled = true
  # enabled = false
}

generate_html_tree {
  depth = 5
  degree = 3

  frequency-table {
    top = 50
    equalize = true
  }
}

genetic {
  # population = 50 # population size
  # archive = 1 # archive size (best entities to keep track of)
  # generations = 200 # maximum number of generations

  # population = 6 # population size
  # archive = 3 # archive size (best entities to keep track of)
  # generations = 500 # maximum number of generations

  # population = 12 # population size
  # archive = 6 # archive size (best entities to keep track of)
  # generations = 500 # maximum number of generations

  # population = 24 # population size
  # archive = 12 # archive size (best entities to keep track of)
  # generations = 1000 # maximum number of generations

  # population = 36 # population size
  # archive = 18 # archive size (best entities to keep track of)
  # generations = 200 # maximum number of generations

  population = 50 # population size
  archive = 25 # archive size (best entities to keep track of)
  generations = 200 # maximum number of generations

  # population = 500 # population size
  # archive = 50 # archive size (best entities to keep track of)
  # generations = 50 # maximum number of generations

  crossover_rate = 0.5 # crossover rate (% of entities by crossover)
  mutation_rate = 0.5 # mutation rate (% of entities by mutation)
  crossover_param = 0.0 # parameter for crossover
  mutation_param = 0.0 # parameter for mutation (e.g % of replaced letters)  
  checkpointing = false # whether or not to use checkpointing
  rescorearchive = true # don't rescore archive in each generation
  converge_archive_size = 5 # size of archive to be checked for convergence
  check_converge = true
}

random {
  budget = 500
}

algorithm {
  type = "GEN" # specifies which algorighm to apply: gen or rand
  # type = "RAND"
  # type = "SHORT_PATH"
}

logging {
 level = "CRITICAL"
 # level = "ERROR"
 # level = "NOTICE"
 # level = "INFO"
 # level = "DEBUG"
}

